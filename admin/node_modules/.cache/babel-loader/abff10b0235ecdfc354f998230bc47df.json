{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shubh\\\\OneDrive\\\\Desktop\\\\syntup-main\\\\admin\\\\src\\\\containers\\\\Categories\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Modal, Button } from 'react-bootstrap';\nimport Header from '../../components/Header';\nimport { getAllCategory, addCategory } from '../../actions';\nimport Input from '../../components/UI/Input';\nimport CheckboxTree from 'react-checkbox-tree';\nimport \"react-checkbox-tree/lib/react-checkbox-tree.css\";\nimport { AiFillCheckCircle, AiOutlineCheckCircle } from \"react-icons/ai\";\nimport { BiDownArrow, BiRightArrow } from \"react-icons/bi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Category = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const category = useSelector(state => state.category);\n  const [categoryName, setcategoryName] = useState('');\n  const [parentCategoryId, setParentCategoryId] = useState('');\n  const [categoryImage, setCategoryImage] = useState('');\n  const [show, setShow] = useState(false);\n  const [checked, setChecked] = useState([]);\n  const [expanded, setExpanded] = useState([]);\n  const [checkedArray, setCheckedArray] = useState([]);\n  const [expandedArray, setExpandedArray] = useState([]);\n  const [updateCategoryModal, setUpdateCategoryModal] = useState(false);\n  useEffect(() => {\n    console.log('Category.js');\n    dispatch(getAllCategory());\n  }, []);\n\n  const handleClose = () => {\n    const form = new FormData();\n    form.append('name', categoryName);\n    form.append('parentId', parentCategoryId);\n    form.append('CategoryImage', categoryImage);\n    dispatch(addCategory(form)).then(result => {\n      if (result) {\n        dispatch(getAllCategory());\n      }\n    }); // const cat = {\n    //     categoryName,\n    //     parentCategoryId,\n    //     categoryImage\n    // };\n\n    setShow(false);\n  };\n\n  const handleShow = () => setShow(true);\n\n  const showCategories = categories => {\n    let categorylist = [];\n\n    for (let category of categories) {\n      categorylist.push({\n        label: category.name,\n        value: category._id,\n        children: category.children.length > 0 && showCategories(category.children)\n      });\n    }\n\n    return categorylist;\n  };\n\n  const createCategoryList = (categories, options = []) => {\n    for (let category of categories) {\n      options.push({\n        value: category._id,\n        name: category.name,\n        parentId: category.parentId\n      });\n\n      if (category.children.length > 0) {\n        createCategoryList(category.children, options);\n      }\n    }\n\n    return options;\n  };\n\n  const handleCategoryImage = e => {\n    setCategoryImage(e.target.files[0]);\n  };\n\n  const updateCategory = () => {\n    setUpdateCategoryModal(true);\n    const categories = createCategoryList(category.categories);\n    const checkedArray = [];\n    const expandedArray = [];\n    checked.length > 0 && checked.forEach((categoryId, index) => {\n      const category = category.find((category, _index) => categoryId == category.value);\n      category && checkedArray.push(category);\n    });\n    expanded.length > 0 && expanded.forEach((categoryId, index) => {\n      const category = category.find((category, _index) => categoryId == category.value);\n      category && expandedArray.push(category);\n    });\n    console.log({\n      checked,\n      expanded,\n      categories,\n      checkedArray,\n      expandedArray\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"categories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleShow,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CheckboxTree, {\n      nodes: showCategories(category.categories),\n      checked: checked,\n      expanded: expanded,\n      onCheck: checked => {\n        setChecked(checked);\n      },\n      onExpand: expanded => {\n        setExpanded(expanded);\n      },\n      icons: {\n        check: /*#__PURE__*/_jsxDEV(AiFillCheckCircle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 28\n        }, this),\n        uncheck: /*#__PURE__*/_jsxDEV(AiOutlineCheckCircle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 30\n        }, this),\n        expandClose: /*#__PURE__*/_jsxDEV(BiRightArrow, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 34\n        }, this),\n        expandOpen: /*#__PURE__*/_jsxDEV(BiDownArrow, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 33\n        }, this),\n        halfCheck: /*#__PURE__*/_jsxDEV(AiOutlineCheckCircle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 32\n        }, this)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: updateCategory,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Add New Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          value: categoryName,\n          placeholder: 'Category Name',\n          onChange: e => setcategoryName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-control\",\n          value: parentCategoryId,\n          onChange: e => setParentCategoryId(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Select category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this), createCategoryList(category.categories).map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option.value,\n            children: option.name\n          }, option.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"categoryImage\",\n          onChange: handleCategoryImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleClose,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: updateCategoryModal,\n      handleClose: () => setUpdateCategoryModal(false),\n      size: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Update Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Expanded\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              value: categoryName,\n              placeholder: 'Category Name',\n              onChange: e => setcategoryName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control\",\n              value: parentCategoryId,\n              onChange: e => setParentCategoryId(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Select category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 25\n              }, this), createCategoryList(category.categories).map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option.value,\n                children: option.name\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 29\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"store\",\n                children: \"Store\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"product\",\n                children: \"Product\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"page\",\n                children: \"Page\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              value: categoryName,\n              placeholder: 'Category Name',\n              onChange: e => setcategoryName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control\",\n              value: parentCategoryId,\n              onChange: e => setParentCategoryId(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Select category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 25\n              }, this), createCategoryList(category.categories).map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option.value,\n                children: option.name\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 29\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"store\",\n                children: \"Store\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"product\",\n                children: \"Product\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"page\",\n                children: \"Page\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleClose,\n          children: \"Update Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Category, \"f+jqJTiUSWvyxLAig14m15tY/PE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Category;\nexport default Category;\n\nvar _c;\n\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"sources":["C:/Users/shubh/OneDrive/Desktop/syntup-main/admin/src/containers/Categories/index.js"],"names":["React","useEffect","useState","Row","Col","useDispatch","useSelector","Modal","Button","Header","getAllCategory","addCategory","Input","CheckboxTree","AiFillCheckCircle","AiOutlineCheckCircle","BiDownArrow","BiRightArrow","Category","props","dispatch","category","state","categoryName","setcategoryName","parentCategoryId","setParentCategoryId","categoryImage","setCategoryImage","show","setShow","checked","setChecked","expanded","setExpanded","checkedArray","setCheckedArray","expandedArray","setExpandedArray","updateCategoryModal","setUpdateCategoryModal","console","log","handleClose","form","FormData","append","then","result","handleShow","showCategories","categories","categorylist","push","label","name","value","_id","children","length","createCategoryList","options","parentId","handleCategoryImage","e","target","files","updateCategory","forEach","categoryId","index","find","_index","check","uncheck","expandClose","expandOpen","halfCheck","map","option"],"mappings":"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","sourcesContent":["import React, { useEffect, useState  } from 'react'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport Header from '../../components/Header';\r\nimport { getAllCategory, addCategory } from '../../actions';\r\nimport Input from '../../components/UI/Input';\r\nimport CheckboxTree from 'react-checkbox-tree';\r\nimport \"react-checkbox-tree/lib/react-checkbox-tree.css\";\r\nimport { AiFillCheckCircle, AiOutlineCheckCircle } from \"react-icons/ai\";\r\nimport { BiDownArrow, BiRightArrow } from \"react-icons/bi\";\r\n\r\nconst Category = (props) => {\r\n    const dispatch = useDispatch();\r\n    const category = useSelector(state => state.category);\r\n    const [categoryName, setcategoryName] = useState('');\r\n    const [parentCategoryId, setParentCategoryId] = useState('');\r\n    const [categoryImage, setCategoryImage] = useState('');\r\n    const [show, setShow] = useState(false);\r\n    const [checked, setChecked] = useState([]);\r\n    const [expanded, setExpanded] = useState([]);\r\n    const [checkedArray, setCheckedArray] = useState([]);\r\n    const [expandedArray, setExpandedArray] = useState([]);\r\n    const [updateCategoryModal, setUpdateCategoryModal] = useState(false);\r\n\r\n    useEffect(() => {\r\n        console.log('Category.js')\r\n        dispatch(getAllCategory());\r\n\r\n    }, []);\r\n\r\n    const handleClose = () => {\r\n        const form = new FormData();\r\n\r\n\r\n        form.append('name', categoryName);\r\n        form.append('parentId', parentCategoryId);\r\n        form.append('CategoryImage', categoryImage);\r\n        dispatch(addCategory(form)).then((result)=>{\r\n            if (result) {\r\n                dispatch(getAllCategory());\r\n            }\r\n        });\r\n\r\n        // const cat = {\r\n        //     categoryName,\r\n        //     parentCategoryId,\r\n        //     categoryImage\r\n        // };\r\n\r\n       \r\n\r\n\r\n        setShow(false);\r\n    }\r\n    const handleShow = () => setShow(true);\r\n\r\n    const showCategories = (categories) => {\r\n\r\n        let categorylist = [];\r\n        for (let category of categories) {\r\n            categorylist.push(\r\n                {\r\n                label: category.name, \r\n                value: category._id,\r\n                children: category.children.length>0 && showCategories(category.children)\r\n                }  \r\n            );\r\n        }\r\n        return categorylist;\r\n    }\r\n\r\n    const createCategoryList = (categories, options = []) => {\r\n        for(let category of categories){\r\n            options.push({value:category._id, name:category.name, parentId:category.parentId });\r\n            if(category.children.length > 0){\r\n                createCategoryList(category.children, options)\r\n            }\r\n        }\r\n        \r\n        return options;\r\n    }\r\n\r\n    const handleCategoryImage = (e) => {\r\n        setCategoryImage(e.target.files[0]);\r\n    }\r\n\r\n\r\n    const updateCategory = () => {\r\n        setUpdateCategoryModal(true);\r\n        const categories = createCategoryList(category.categories);\r\n        const checkedArray=[];\r\n        const expandedArray=[];\r\n        checked.length > 0 && checked.forEach((categoryId, index) => {\r\n            const category = category.find((category, _index) => categoryId == category.value)\r\n            category && checkedArray.push(category);\r\n        })\r\n        expanded.length > 0 && expanded.forEach((categoryId, index) => {\r\n            const category = category.find((category, _index) => categoryId == category.value)\r\n            category && expandedArray.push(category);\r\n        })\r\n\r\n\r\n\r\n        console.log({checked, expanded, categories, checkedArray, expandedArray});\r\n    }\r\n\r\n\r\n  \r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>categories</h1>\r\n            <button onClick={handleShow}>Add</button>\r\n\r\n            <CheckboxTree \r\n            \r\n            nodes={showCategories(category.categories)}\r\n\r\n            checked={checked}\r\n            expanded={expanded}\r\n            onCheck={(checked) => {setChecked(checked)}}\r\n            onExpand={(expanded) => {setExpanded(expanded)}}\r\n\r\n\r\n                icons={{\r\n                    check: <AiFillCheckCircle/>,  \r\n                    uncheck: <AiOutlineCheckCircle/>,\r\n                    expandClose: <BiRightArrow/>,\r\n                    expandOpen: <BiDownArrow/>,\r\n                    halfCheck: <AiOutlineCheckCircle/>,\r\n\r\n                }}\r\n                />\r\n\r\n                {/*edit button ka idhar h */}\r\n\r\n                <Row>\r\n                <button>Delete</button>\r\n                <button onClick={updateCategory}>Edit</button>\r\n                </Row>\r\n               \r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Add New Category</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Input\r\n                        value={categoryName}\r\n                        placeholder={'Category Name'}\r\n                        onChange={(e) => setcategoryName(e.target.value)}\r\n                    />\r\n\r\n                    <select \r\n                    className = \"form-control\"\r\n                    value = {parentCategoryId}\r\n                    onChange = {(e) => setParentCategoryId(e.target.value)}>\r\n\r\n                        <option>Select category</option>\r\n                        {\r\n                            createCategoryList(category.categories).map(option =>\r\n                            <option key={option.value} value={option.value}>{option.name}</option>)    \r\n                        }\r\n                    </select>\r\n\r\n                    <input type=\"file\" name= \"categoryImage\" onChange={handleCategoryImage} />\r\n\r\n\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n\r\n                    <Button variant=\"primary\" onClick={handleClose}>\r\n                        Save Changes\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            {/* Edit Category */}\r\n\r\n            <Modal show={updateCategoryModal} \r\n            handleClose={ () => setUpdateCategoryModal(false)}\r\n            size='lg'\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Update Category</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n\r\n                    <Row> \r\n                        <Col>\r\n                        <h6>Expanded</h6>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    \r\n                    <Row>\r\n                        <Col>\r\n                        <Input\r\n                        value={categoryName}\r\n                        placeholder={'Category Name'}\r\n                        onChange={(e) => setcategoryName(e.target.value)}\r\n                        />\r\n                        </Col>\r\n                        <Col>\r\n                        <select \r\n                    className = \"form-control\"\r\n                    value = {parentCategoryId}\r\n                    onChange = {(e) => setParentCategoryId(e.target.value)}>\r\n\r\n                        <option>Select category</option>\r\n                        {\r\n                            createCategoryList(category.categories).map(option =>\r\n                            <option key={option.value} value={option.value}>{option.name}</option>)    \r\n                        }\r\n                    </select>\r\n                        </Col>\r\n\r\n                        <Col>\r\n\r\n                    <select \r\n                    className = \"form-control\"\r\n                    >\r\n                        <option value =\"\">Select Type</option>\r\n                        <option value =\"store\">Store</option>\r\n                        <option value =\"product\">Product</option>\r\n                        <option value =\"page\">Page</option>\r\n                    </select>\r\n\r\n                    </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                        <Input\r\n                        value={categoryName}\r\n                        placeholder={'Category Name'}\r\n                        onChange={(e) => setcategoryName(e.target.value)}\r\n                        />\r\n                        </Col>\r\n                        <Col>\r\n                        <select \r\n                    className = \"form-control\"\r\n                    value = {parentCategoryId}\r\n                    onChange = {(e) => setParentCategoryId(e.target.value)}>\r\n\r\n                        <option>Select category</option>\r\n                        {\r\n                            createCategoryList(category.categories).map(option =>\r\n                            <option key={option.value} value={option.value}>{option.name}</option>)    \r\n                        }\r\n                    </select>\r\n                        </Col>\r\n\r\n                        <Col>\r\n\r\n                    <select \r\n                    className = \"form-control\"\r\n                    >\r\n                        <option value =\"\">Select Type</option>\r\n                        <option value =\"store\">Store</option>\r\n                        <option value =\"product\">Product</option>\r\n                        <option value =\"page\">Page</option>\r\n                    </select>\r\n\r\n                    </Col>\r\n                    </Row>\r\n                \r\n\r\n\r\n                    {/* <input type=\"file\" name= \"categoryImage\" onChange={handleCategoryImage} /> */}\r\n\r\n\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n\r\n                    <Button variant=\"primary\" onClick={handleClose}>\r\n                        Update Changes\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Category;\r\n"]},"metadata":{},"sourceType":"module"}